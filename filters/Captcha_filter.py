from aiogram import Bot
from aiogram.filters import BaseFilter
from aiogram.types import Message
from sqlalchemy import select, delete
from sqlalchemy.ext.asyncio import async_sessionmaker

from database.database_postgres import UserCaptchaConfirm, UserCaptcha
from keyboard.inline.captcha_kb import captcha_kb


class CaptchaFilter(BaseFilter):
	"""
	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è

	–∞—Å–∏–Ω—Ö—Ä–æ–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –∫–æ–¥.
	"""
	def __init__(self, session_pool: async_sessionmaker) -> None:
		super().__init__()
		self.session_pool = session_pool

	async def __call__(self, message: Message, bot: Bot) -> bool:
		"""
		–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∞–Ω—Ç–∏-–±–æ—Ç.

		–µ—Å–ª–∏ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö -> –ü—Ä–æ—Ç–∞–ª–∫–∏–≤–∞–µ–º handler

		–Ω–µ—Ç—É -> –í—ã–¥–∞—ë–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞–ø—á–∏.
		"""
		async with self.session_pool() as session:
			user_id = message.from_user.id
			# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–∏–º –ø—É–Ω–∫—Ç–æ–º –Ω–µ—Ç –≤ –ë–î, –¥–∞—ë–º –µ–º—É –∫–∞–ø—á—É.
			# –ï—Å—Ç—å -> –ø—Ä–æ—Ç–∞–ª–∫–∏–≤–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä
			select_user = await session.execute(select(UserCaptchaConfirm).filter_by(user_id=user_id))
			select_user = select_user.fetchone()

			if select_user is None:
				# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–¥ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
				await session.execute(delete(UserCaptcha).where(UserCaptcha.user_id == user_id))
				await session.commit()

				# –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–π —Å ( inline.captcha_kb )
				ikb, dict_for_emodji = await captcha_kb()
				random_4_emodji = dict_for_emodji['random_4_emodji']

				# –≠–º–æ–¥–∑–∏ –¥–ª—è –∑–∞–Ω–æ—Å–∞ –≤ –ë–î
				emoji_to_english = {
					"‚≠ê": "star", "‚ô•Ô∏è": "heart", "üçÑ": "mushroom",
					"üî•": "fire", "‚öΩ": "soccer_ball", "üèÜ": "trophy",
					"üçé": "apple", "üåç": "earth", "üç™": "cookie",
					"üß≠": "compass", "üåº": "flower", "üé≤": "dice"
				}

				english_emodji = [emoji_to_english[char] for char in random_4_emodji]
				emodji_str = ', '.join(english_emodji)

				# –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ë–î
				user_captcha = UserCaptcha(user_id=user_id, emodji=emodji_str)
				session.add(user_captcha)
				await session.commit()

				# –ß—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è–ª—Å—è —á–∞—Ç.
				# –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –±–æ—Ç–∞ –∏ user'–∞
				if message == '/start':
					pass
				else:
					try:
						await bot.delete_message(
							chat_id=message.chat.id,
							message_id=message.message_id - 1
						)
						await bot.delete_message(
							chat_id=message.chat.id,
							message_id=message.message_id
						)
					except Exception as e:
						print(f'{e}, –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è. –ù–µ—Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ')

				await message.bot.send_message(
					chat_id=message.chat.id,
					text=f"ü§ñ –ê–Ω—Ç–∏-–±–æ—Ç —Å–∏—Å—Ç–µ–º–∞\n\n"
					     f"<b>–í—ã–±–∏—Ä–∞–π –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∏–∂–µ –≤ —Ç–∞–∫–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ!</b>\n\n"
					     f"{' ‚Æï  '.join(random_4_emodji)}",
					reply_markup=ikb
				)
				return False
			return True

